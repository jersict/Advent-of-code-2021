package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
	"strconv"
	"strings"
)

func readInput() (start []int) {
	readFile, err := os.Open("input.txt")

	if err != nil {
		log.Fatalf("failed to open file: %s", err)
	}

	fileScanner := bufio.NewScanner(readFile)
	fileScanner.Split(bufio.ScanLines)

	fileTextLines := []string{}

	for fileScanner.Scan() {
		fileTextLines = append(fileTextLines, fileScanner.Text())
	}

	vals := strings.Split(fileTextLines[0], ",")
	for i := 0; i < len(vals); i++ {
		num, err := strconv.Atoi(vals[i])
		if err != nil {
			log.Fatalf("failed to convert: %s", err)
		} else {
			start = append(start, num)
		}
	}
	return
}

func nextDay(school []int) []int {
	for i := range school {
		school[i]--
	}
	return school
}

func countAndResetZeros(school []int) ([]int, int) {
	count := 0
	for i := range school {
		if school[i] == 0 {
			count++
			school[i] = 7
		}
	}
	return school, count
}

func fishAfterXDays(numOfDays int) {
	school := readInput()
	for i := 0; i < numOfDays; i++ {
		next_school, spawns := countAndResetZeros(school)
		for i := 0; i < spawns; i++ {
			next_school = append(next_school, 9)
		}
		school = next_school
		school = nextDay(school)

	}
	fmt.Printf("After %d there is %d fish.\n", numOfDays, len(school))
}
func mains() {
	fishAfterXDays(256)
}
